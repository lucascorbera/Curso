Sobre o git para estudo e lembrar. 


git add . : usado sempre para adc os arquivos que tiveram altera√ß√£o, executar sempre antes de commit
git commit -m " descri√ß√£o" : Para salvar as altera√ß√µes realizadas no campo git add .
git push origin main : Envia as altera√ß√£o para o servidor do git
git pull origin main : busca os dados do servidor do git 

---------- outras func√µes importante do git ------------
git init: para iniciar um repositorio na sua maquina local. 


üìå Guia de M√£o Git ‚Äî Comandos Essenciais
1Ô∏è‚É£ Configura√ß√£o inicial
# Configurar usu√°rio e email (s√≥ precisa uma vez)
git config --global user.name "Seu Nome"
git config --global user.email "seuemail@email.com"

# Ver configura√ß√µes
git config --list

2Ô∏è‚É£ Criar ou clonar reposit√≥rio
# Iniciar um novo reposit√≥rio
git init

# Clonar um reposit√≥rio existente
git clone https://github.com/usuario/repositorio.git

3Ô∏è‚É£ Status e hist√≥rico
# Verificar status do reposit√≥rio
git status

# Hist√≥rico de commits (simplificado)
git log --oneline --graph --decorate

# Hist√≥rico de um arquivo espec√≠fico
git log -- nome-do-arquivo

4Ô∏è‚É£ Trabalhando com arquivos
# Adicionar todos os arquivos modificados
git add .

# Adicionar um arquivo espec√≠fico
git add caminho/arquivo.txt

# Commit com mensagem
git commit -m "Mensagem do commit"

# Commitando tudo de uma vez (sem add separado)
git commit -am "Mensagem do commit"

5Ô∏è‚É£ Enviar e receber altera√ß√µes
# Enviar commits locais para o GitHub
git push origin main

# Baixar altera√ß√µes do GitHub e mesclar
git pull origin main

# Baixar altera√ß√µes e reescrever hist√≥rico (mais limpo)
git pull origin main --rebase

6Ô∏è‚É£ Trabalhando com branches
# Criar nova branch
git branch minha-feature

# Trocar de branch
git checkout minha-feature

# Criar e trocar ao mesmo tempo
git checkout -b minha-feature

# Listar branches
git branch

# Mesclar branch na main
git checkout main
git merge minha-feature

# Deletar branch local
git branch -d minha-feature

7Ô∏è‚É£ Desfazer altera√ß√µes
# Restaurar arquivo para o √∫ltimo commit
git restore arquivo.txt

# Resetar todos os arquivos para o √∫ltimo commit
git restore .

# Voltar ao estado de 1 commit atr√°s (sem apagar hist√≥rico)
git revert HEAD

# Resetar branch para um commit espec√≠fico (perigoso!)
git reset --hard <hash-do-commit>

8Ô∏è‚É£ Resolver conflitos
# Durante merge ou rebase, depois de resolver manualmente
git add arquivo.txt
git rebase --continue   # ou git merge --continue

9Ô∏è‚É£ Stash (guardar altera√ß√µes temporariamente)
# Guardar altera√ß√µes sem commit
git stash

# Listar stashes
git stash list

# Restaurar √∫ltimo stash
git stash pop

üîü Dicas √∫teis
# Ver diferen√ßas de c√≥digo
git diff

# Ver diferen√ßas de c√≥digo j√° staged (depois do add)
git diff --staged

# Remover arquivo do reposit√≥rio, mas manter local
git rm --cached arquivo.txt


‚úÖ Fluxo de trabalho recomendado (branch √∫nica):

git status                # Verifica o que mudou
git add .                 # Adiciona altera√ß√µes
git commit -m "mensagem"  # Salva altera√ß√µes
git pull origin main --rebase  # Puxa remoto antes de enviar
git push origin main      # Sobe altera√ß√µes