comando para buildar dockfile
docker build --tag servidor-node-jira .

para rodar o docker 
docker run -p 3000:3000 --name servidor-node-jira-container -d servidor-node-jira

deletar contenier
docker container rm crud-jira-app-container

deletar a imagem dockfile 
docker image rm crud-jira-app

ExplicaÃ§Ã£o

Build Stage

Usa a imagem dotnet/sdk:8.0 â†’ inclui SDK para compilar.

Restaura dependÃªncias com dotnet restore.

Publica em Release para a pasta /app/publish.

Runtime Stage

Usa dotnet/aspnet:8.0 â†’ apenas o runtime (imagem muito menor que o SDK).

Copia somente os arquivos compilados da etapa de build.

ExpÃµe a porta 5151 (padrÃ£o da sua API).

Define o comando para rodar a aplicaÃ§Ã£o.

ğŸ”¹ Comandos para testar

Construir a imagem Docker:

docker build -t jiraproxyapi:latest .


Rodar a aplicaÃ§Ã£o em container:

docker run -d -p 5151:5151 --name jiraproxy jiraproxyapi:latest


Testar no navegador ou no Angular:

http://localhost:5151/api/jira?endpoint=search/jql

ğŸ”¹ Dicas de produÃ§Ã£o

Armazene segredos (Jira API token, email) usando variÃ¡veis de ambiente no container:

docker run -d -p 5151:5151 \
  -e Jira__ApiToken="SEU_TOKEN" \
  -e Jira__Email="seuemail@empresa.com" \
  jiraproxyapi:latest


Para HTTPS, vocÃª pode adicionar um reverse proxy como Nginx ou Traefik em frente ao container.